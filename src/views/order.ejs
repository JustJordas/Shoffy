<!DOCTYPE html>
<html lang="en-US">

<head>
    <% include templates/head.ejs %>
        <link rel="stylesheet" href="/css/login2.css" />
        <link rel="stylesheet" href="/css/chat.css" />
        <script type="text/javascript" src="/js/login.js"></script>
</head>

<% include templates/nav.ejs %>    
<% include templates/facebook.ejs %>
    <div class="container">
        <img src="/res/image_yellow.jpg" class="mx-auto d-block" style="height: 100vh; min-height: 100vh">
        <div class="center">
            <div class="outterBox">
                <h1>
                    Basket for <%= order.user.firstName %>:
                </h1>
                <div class="box">
                    <button id="beforeButton" type="hidden" class="btn btn-primary d-none" onclick="">
                        Add new product
                    </button>
                </div>
                <div class="row">
                    <div class="chat">
                        <div class="card">
                            <div id="messagesCardBody" class="card-body">
                                <p class="card-text">Awesome</p>
                            </div>
                        </div>
                        <form id="sendMessageForm" onsubmit="sendMessage(); return false;">
                             <div class="input-group">
                                <input id="sendMessageInput" type="text" name="text" autocomplete="off" />
                            </div>
                        </form>
                    </div>
                </div>
                <% if(user.type == 'driver') { %>
                    <div class="row">
                        <form id="formCompleteOrder" class="col-12" action="/order/<%= order._id %>/completed" method="post" onsubmit="sendMessage('Marked as completed'); return true;">
                            <button tyxpe="submit" class="btn btn-primary col-12 basketButton">
                                Mark as completed
                            </button>
                        </form>
                    </div>

                    <script>
                        // Note: This example requires that you consent to location sharing when
                        // prompted by your browser. If you see the error "The Geolocation service
                        // failed.", it means you probably did not give permission for the browser to
                        // locate you.
                        function initMap(){
                            setInterval(function () {
                                if (navigator.geolocation) {
                                    navigator.geolocation.getCurrentPosition(function(position) {
                                        pos = {
                                            lat: position.coords.latitude,
                                            lng: position.coords.longitude
                                        };
                                        //service.nearbySearch(request, setShop);
        
                                        $.post('/order/<%= order._id %>/updateDriverLocation', {
                                            location: pos
                                        }, function( success) {
                                            if(success == true){
                                                console.log('Location updated:', pos);
                                            } else {
                                                console.log('Location update failed', pos);
                                            }
                                        });
                                    }, function() {});
                                }
                            }, 5000);                            
                        }
                    </script>
                    <script async defer
                        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDHfohgtdHeSqkM28bLbqGld5Hw3U_0qTA&libraries=places&callback=initMap">
                    </script>
                <% } else { %>
                    <div class="row">
                        <a href="/order/<%= order._id %>/driverLocation" class="btn btn-primary col-12 basketButton">
                            Check driver
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</body>

<% include templates/footer.ejs %>
<script>
var products = [];
products = <%- JSON.stringify(order.basket) %>;


var basket = {};

Object.keys(products).forEach(function (productID) {
    if(products[productID].available == true) {
        addNewProduct(products[productID]);
    }
});


function addNewProduct(product = { _id: new Date().getTime(), image: '/res/image-not-found.jpg', name: 'no name', price: 0.0, new: true }) {

    //console.log(product);

    delete product.new;

    const newElement = '' +
        '<div id="group' + product._id + '" class="card text-white bg-dark">' +
            '<img id="image' + product._id + '" class="card-img-top" src="' + product.image + '" alt="Card image cap">' +
            '<div class="card-body">' +
                '<div class="input-group">' +
                    '<input id="name' + product._id + '" class="card-title active" type="text" onblur="checkInput(this)" value="' + product.name + '" disabled />' +
                    '<label for="name' + product._id + '">Name</label>' +
                '</div>' +
                '<div class="input-group">' +
                    '<input id="price' + product._id + '" class="card-title active" type="number" step="any" onblur="checkInput(this)" value="' + product.price + '" disabled/>' +
                    '<label for="price' + product._id + '">Price</label>' +
                '</div>' +
                '<div class="input-group">' +
                    '<input id="amount' + product._id + '" class="card-title active" type="number" step="1" onblur="checkInput(this)" value="' + product.quantity + '" disabled/>' +
                    '<label for="amount' + product._id + '">Amount</label>' +
                '</div>' +
                <% if (user.type == 'driver') { %>
                    '<button type="button" class="btn btn-danger col-12" onclick="markAsUnav(&quot;' + product._id + '&quot;)">' +
                    'Mark as unavailable' +
                    '</button>' +
                <% } %>
            '</div>' +
        '</div>';

    //console.log(newElement);

    $("#beforeButton").before(newElement);

    <% if(user.type == 'driver') { %> 
        $("#group" + product._id).on('click', function () {
            removeFromBasket(product._id)
        });

        $("#group" + product._id).on('contextmenu', function (e) {
            e.preventDefault();
            addToBasket(product._id)
        });
    <% } %>

    basket[product._id] = product.quantity;
}

function addToBasket(id) {
    //console.log('Clicked');

    if (basket[id] < products[id].quantity) {
        basket[id] += 1;
        $('#amount' + id).val(parseInt($('#amount' + id).val()) + 1);

        sendMessage('Item ' + id + ' added to basket');
    }

    var sum = 0.0;

    Object.keys(basket).forEach(function (productID) {
        //console.log(parseFloat($('#price' + productID).val()));
        sum += parseInt($('#amount' + productID).val()) * parseFloat($('#price' + productID).val());
    });

    //console.log(sum);


    $('#basketButton').html('Order now: $' + sum.toFixed(2));
}

function max(a, b) {
    if (a < b) {
        return b;
    } else {
        return a;
    }
}

function removeFromBasket(id) {
    $('#amount' + id).val(max(parseInt($('#amount' + id).val()) - 1, 0));

    if (basket[id] && basket[id] > 0) {
        basket[id] -= 1;

        sendMessage('Item ' + id + ' removed from basket');
    }

    var sum = 0.0;

    Object.keys(basket).forEach(function (productID) {
        //console.log(parseFloat($('#price' + productID).val()));
        sum += parseInt($('#amount' + productID).val()) * parseFloat($('#price' + productID).val());
    });

    //console.log(sum);


    $('#basketButton').html('Order now: $' + sum.toFixed(2));
}

function sendOrder() {
    $("#inputBasket").val(JSON.stringify(basket));
    $("#formNewOrder").submit();
}

function markAsUnav(productID) {
    var order = <%- JSON.stringify(order) %>
    $.post('/order/<%= order._id %>/basket/' + productID + '/update', {
        update: {
            available: false,
            price: parseFloat(order.price) - parseFloat(order.basket[productID].price) * parseInt(order.basket[productID].quantity)
        }
    });

    $("#group" + productID).hide();

    sendMessage('Item unavailable: ' + productID + '.' + 
            '<a href="/order/<%= order._id %>/basket/' + productID + '/alternative" style="color: blue; cursor: hand;">' +
            ' Click here ' +
            '</a>' +
        'for alternative!');
}

setInterval(function() {
    $.post('/chat/<%= order._id %>/getAll', {
        author: '<%= user._id %>',
        message: 'Message'
    }, function(data) {
        //console.log(data);
        $('#messagesCardBody').empty();
        data.forEach(function (datum) {
            $('#messagesCardBody').append('<p class="card-text">' + datum.authorFirstName + ': ' + datum.message + '</p>');
        });
    });

    var objDiv = document.getElementById("messagesCardBody");
    objDiv.scrollTop = objDiv.scrollHeight;
}, 1000);

function sendMessage(message = null) {
    var data = {
        authorID: '<%= user._id %>',
        authorFirstName: '<%= user.firstName %>',
        message: message || $('#sendMessageInput').val()
    }

    $.post('/chat/<%= order._id %>/new', data);

    $('#messagesCardBody').append('<p class="card-text">' + data.authorFirstName + ': ' + data.message + '</p>');
    
    var objDiv = document.getElementById("messagesCardBody");
    objDiv.scrollTop = objDiv.scrollHeight;

    if(!message) {
        $('#sendMessageInput').val('');
    }
}

//Array append + onchange each input... bleah
</script>

</html>